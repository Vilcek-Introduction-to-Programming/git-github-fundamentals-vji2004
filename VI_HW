This page was a very helpful introduction! I now feel that I understand how to use github to share your code, work on drafts and or branches of your code safely while preserving the code that is (presumably/hopefully) the most fundamental and functioning, and how working on software as a global community can have very exciting implications. That being said, I still don't understand the culture of GitHub fully. For example, is your dashboard full of public repositories to scroll through and choose to work on if you so wish, or do you have to know who to follow first? How can github enable two strangers who want to work on the same types of issues/code to do so if they don't already know of each other? How professional is github (i.e. when the article says you can make yourself available to employers, is that normal? Not only professionals/ coworkers use it, and so what do hobbyists do on github/ is there a social element?). Sorry if these questions are obvious, I have obviously never used GitHub lol. Many of the ways to improve upon computational reproducibility that Wilson et al mentioned are made easier with a tool like GitHub (i.e. software, collaboration, project organization, etc). Project organization is a particularly great one, since GitHub allows you to keep track of all the changes you make to your code in neatly labeled and separate branches, as well as keeping a record of which team member made what comment. Furthermore, you can flag issues with GitHub, so everyone knows what bugs the code has or what features they want to add. Neato
